[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "hello"
description = 'Easy to use code high quality code templates'
#readme = "README.md"
requires-python = ">=3.11"
license = "MIT"
keywords = []
authors = [{ name = "Johan Dahlin", email = "jdahlin@gmail.com" }]
# https://pypi.org/classifiers/
classifiers = [
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: Implementation :: CPython",
]
dynamic = ["version"]
dependencies = []

[project.urls]
Source = ""
Tracker = ""

# https://hatch.pypa.io/latest/version/#configuration

[project.optional-dependencies]
test = ["pytest"]
types = ["pytest", "mypy"]
dev = ["black"]


[tool.hatch.version]
path = "src/app/__version__.py"
[tool.pytest.ini_options]
addopts = "-s -vv"

[tool.mypy]
mypy_path = ""
python_version = "3.11"
strict = true
warn_unused_configs = true
namespace_packages = false
show_error_codes = true
show_column_numbers = true
show_error_context = true
pretty = true

[[tool.mypy.overrides]]
module = []
ignore_missing_imports = true
[tool.black]
# https://black.readthedocs.io/en/stable/usage_and_configuration/the_basics.html#include
include = "./src"

# https://black.readthedocs.io/en/stable/usage_and_configuration/the_basics.html#l-line-length
line-length = 88

# https://black.readthedocs.io/en/stable/usage_and_configuration/the_basics.html#t-target-version
target-version = ["py311"]
[tool.ruff]
src = ["./src"]
line-length = 88
select = [
  "E",     # pycodestyle (supersedes pep8)
  "F",     # pyflakes
  "W",     # pycodestyle warnings
  "C90",   # mccabe
  "I",     # isort
  "N",     # pep8-naming
  # "D",   # pydocstyle
  "UP",    # pyupgrade
  "ERA",   # eradicate
  "YTT",   # flake8-2020
  "ANN",   # flake8-annotations
  "S",     # flake8-bandit
  "BLE",   # flake8-blind-except
  "FBT",   # flake8-boolean-trap
  "B",     # flake8-bugbear
  "A",     # flake8-builtins
  "COM",   # flake8-commas
  "C4",    # flake8-comprehensions
  "DTZ",   # flake8-datetimez
  "T10",   # flake8-debugger
  # "EM",  # flake8-errmsg
  "EXE",   # flake8-executable
  "ICN",   # flake8-import-conventions
  "PIE",   # flake8-pie
  # "T20", # flake8-print
  "PYI",   # flake8-pyi
  "Q",     # flake8-quotes
  "RSE",   # flake8-raise
  # "RET", # flake8-return
  "SLF",   # flake8-self
  "SIM",   # flake8-simplify
  "TID",   # flake8-tidy-imports
  "TCH",   # flake8-type-checking
  # "ARG", # flake8-unused-arguments
  "PGH",   # pygrep-hooks
  "PLC",   # pylint Convention
  "PLE",   # pylint Error
  "PLR",   # pylint Refactor
  "PLW",   # pylint Warning
  "RUF",   # ruff-specific rules
]
ignore = [
  "ANN101",
  "ANN102",
  "ANN401",  # typing.Any is okay for kwargs
  "S101",    # assert is useful for mypy
  "S308",    # mark_safe can be useful
  "PLR0913", # too many arguments
]